apiVersion: v1
kind: Service
metadata:
  name: authorization-service
spec:
  selector:
    app: authorization
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authorization-deployment
spec:
  replicas: 1 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: authorization
  template:
    metadata:
      labels:
        app: authorization
    spec:
      containers:
        - name: authorization-container
          image: thanishahamed433/ds-assignment-authorization:latest # Replace with your Docker image
          ports:
            - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: course-management-service
spec:
  selector:
    app: course-management
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-management-deployment
spec:
  replicas: 1 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: course-management
  template:
    metadata:
      labels:
        app: course-management
    spec:
      containers:
        - name: course-management-container
          image: thanishahamed433/ds-assignment-course-management-service:latest # Replace with your Docker image
          ports:
            - containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: learner-management-service
spec:
  selector:
    app: learner-management
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: learner-management-deployment
spec:
  replicas: 1 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: learner-management
  template:
    metadata:
      labels:
        app: learner-management
    spec:
      containers:
        - name: learner-management-container
          image: thanishahamed433/ds-assignment-learner-management-service:latest # Replace with your Docker image
          ports:
            - containerPort: 8085
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo-container
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend-container
          image: thanishahamed433/ds-assignment-frontend-service:latest # Replace with your Docker image
          ports:
            - containerPort: 3000
